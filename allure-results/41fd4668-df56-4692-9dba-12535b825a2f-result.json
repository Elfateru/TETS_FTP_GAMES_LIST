{"name": "test_display_count[50]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c129503b5ade18d52f188e0ff624e372\")>, count = 50\ntest_config = Config(srv=Service(URL='https://makarovartem.github.io/frontend-avito-tech-test-assignment'), cards=TestCards(PARENT_S...s > li', CHILD_SELECTOR='h2.ant-typography'), display_cards=TestDisplayCount(PARENT_SELECTOR='ul.ant-list-items > li'))\n\n    @allure.feature(\"Display Count\")\n    @allure.story(\"Проверка отображения разного количества карточек на странице\")\n    @pytest.mark.parametrize(\"count\", [10, 20, 50, 100])\n    def test_display_count(driver: webdriver.Chrome, count: int, test_config: config.Config) -> None:\n        url = test_config.srv.URL\n        parent_selector = test_config.display_cards.PARENT_SELECTOR\n        driver.get(url)\n        wait = WebDriverWait(driver, 10)\n    \n        with allure.step(\"Считаем карточки на первой странице (дефолтное количество)\"):\n            cards_before = wait.until(\n                EC.presence_of_all_elements_located((By.CSS_SELECTOR, parent_selector))\n            )\n            default_count = len(cards_before)\n    \n        with allure.step(\"Открываем dropdown выбора количества карточек\"):\n            dropdown = wait.until(\n                EC.element_to_be_clickable((By.CSS_SELECTOR, \"li.ant-pagination-options span.ant-select-selection-item\"))\n            )\n            dropdown.click()\n            wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, \".ant-select-dropdown\")))\n            time.sleep(0.3)\n    \n        with allure.step(f\"Выбираем вариант {count} / page\"):\n            option_text = f\"{count} / page\"\n            options = driver.find_elements(By.XPATH, \"//div[@role='option']\")\n            for opt in options:\n                if option_text in opt.text:\n                    opt.click()\n                    break\n    \n        with allure.step(\"Дожидаемся изменения числа карточек на странице\"):\n>           wait.until(lambda d: len(d.find_elements(By.CSS_SELECTOR, parent_selector)) != default_count or count == 10)\n\ntests\\test_display_count.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c129503b5ade18d52f188e0ff624e372\")>, method = <function test_display_count.<locals>.<lambda> at 0x0000027D8FB24900>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "steps": [{"name": "Считаем карточки на первой странице (дефолтное количество)", "status": "passed", "start": 1750003108091, "stop": 1750003108175}, {"name": "Открываем dropdown выбора количества карточек", "status": "passed", "start": 1750003108175, "stop": 1750003109078}, {"name": "Выбираем вариант 50 / page", "status": "passed", "start": 1750003109078, "stop": 1750003109208}, {"name": "Дожидаемся изменения числа карточек на странице", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"C:\\Users\\FATE\\PycharmProjects\\TEST_FTP_GAMES_LIST\\tests\\test_display_count.py\", line 43, in test_display_count\n    wait.until(lambda d: len(d.find_elements(By.CSS_SELECTOR, parent_selector)) != default_count or count == 10)\n  File \"C:\\Users\\FATE\\PycharmProjects\\TEST_FTP_GAMES_LIST\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1750003109208, "stop": 1750003119462}], "attachments": [{"name": "screenshot_on_failure", "source": "7d6af221-1ab9-473e-a933-8e74bebe5fad-attachment.png", "type": "image/png"}], "parameters": [{"name": "count", "value": "50"}], "start": 1750003108021, "stop": 1750003119464, "uuid": "fdac5b1c-f56a-4e4f-8212-078d7886020e", "historyId": "3f017e1bfb434ae117070d56856beda6", "testCaseId": "17173bd030940e7db58dffc13763831f", "fullName": "tests.test_display_count#test_display_count", "labels": [{"name": "story", "value": "Проверка отображения разного количества карточек на странице"}, {"name": "feature", "value": "Display Count"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_display_count"}, {"name": "host", "value": "DESKTOP-VNCOHUV"}, {"name": "thread", "value": "2064-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_display_count"}]}