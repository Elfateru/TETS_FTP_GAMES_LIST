{"name": "test_open_various_game_cards", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 2 validation errors for Config\nsrv\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\ncards\n  Field required [type=missing, input_value={}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing", "trace": "@pytest.fixture(scope=\"session\", autouse=True)\n    def test_config() -> config.Config:\n>       return config.get()\n               ^^^^^^^^^^^^\n\ntests\\conftest.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\config.py:26: in get\n    return Config()\n           ^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n__pydantic_self__ = Config(), _case_sensitive = None, _nested_model_default_partial_update = None, _env_prefix = None, _env_file = WindowsPath('.'), _env_file_encoding = None, _env_ignore_empty = None\n_env_nested_delimiter = None, _env_nested_max_split = None, _env_parse_none_str = None, _env_parse_enums = None, _cli_prog_name = None, _cli_parse_args = None, _cli_settings_source = None, _cli_parse_none_str = None\n_cli_hide_none_type = None, _cli_avoid_json = None, _cli_enforce_required = None, _cli_use_class_docs_for_groups = None, _cli_exit_on_error = None, _cli_prefix = None, _cli_flag_prefix_char = None, _cli_implicit_flags = None\n_cli_ignore_unknown_args = None, _cli_kebab_case = None, _secrets_dir = None, values = {}\n\n    def __init__(\n        __pydantic_self__,\n        _case_sensitive: bool | None = None,\n        _nested_model_default_partial_update: bool | None = None,\n        _env_prefix: str | None = None,\n        _env_file: DotenvType | None = ENV_FILE_SENTINEL,\n        _env_file_encoding: str | None = None,\n        _env_ignore_empty: bool | None = None,\n        _env_nested_delimiter: str | None = None,\n        _env_nested_max_split: int | None = None,\n        _env_parse_none_str: str | None = None,\n        _env_parse_enums: bool | None = None,\n        _cli_prog_name: str | None = None,\n        _cli_parse_args: bool | list[str] | tuple[str, ...] | None = None,\n        _cli_settings_source: CliSettingsSource[Any] | None = None,\n        _cli_parse_none_str: str | None = None,\n        _cli_hide_none_type: bool | None = None,\n        _cli_avoid_json: bool | None = None,\n        _cli_enforce_required: bool | None = None,\n        _cli_use_class_docs_for_groups: bool | None = None,\n        _cli_exit_on_error: bool | None = None,\n        _cli_prefix: str | None = None,\n        _cli_flag_prefix_char: str | None = None,\n        _cli_implicit_flags: bool | None = None,\n        _cli_ignore_unknown_args: bool | None = None,\n        _cli_kebab_case: bool | None = None,\n        _secrets_dir: PathType | None = None,\n        **values: Any,\n    ) -> None:\n>       super().__init__(\n            **__pydantic_self__._settings_build_values(\n                values,\n                _case_sensitive=_case_sensitive,\n                _nested_model_default_partial_update=_nested_model_default_partial_update,\n                _env_prefix=_env_prefix,\n                _env_file=_env_file,\n                _env_file_encoding=_env_file_encoding,\n                _env_ignore_empty=_env_ignore_empty,\n                _env_nested_delimiter=_env_nested_delimiter,\n                _env_nested_max_split=_env_nested_max_split,\n                _env_parse_none_str=_env_parse_none_str,\n                _env_parse_enums=_env_parse_enums,\n                _cli_prog_name=_cli_prog_name,\n                _cli_parse_args=_cli_parse_args,\n                _cli_settings_source=_cli_settings_source,\n                _cli_parse_none_str=_cli_parse_none_str,\n                _cli_hide_none_type=_cli_hide_none_type,\n                _cli_avoid_json=_cli_avoid_json,\n                _cli_enforce_required=_cli_enforce_required,\n                _cli_use_class_docs_for_groups=_cli_use_class_docs_for_groups,\n                _cli_exit_on_error=_cli_exit_on_error,\n                _cli_prefix=_cli_prefix,\n                _cli_flag_prefix_char=_cli_flag_prefix_char,\n                _cli_implicit_flags=_cli_implicit_flags,\n                _cli_ignore_unknown_args=_cli_ignore_unknown_args,\n                _cli_kebab_case=_cli_kebab_case,\n                _secrets_dir=_secrets_dir,\n            )\n        )\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for Config\nE       srv\nE         Field required [type=missing, input_value={}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       cards\nE         Field required [type=missing, input_value={}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\n.venv\\Lib\\site-packages\\pydantic_settings\\main.py:176: ValidationError"}, "start": 1750000554281, "stop": 1750000554281, "uuid": "72f81082-7f1a-4a6f-8f57-7d9ae21e111f", "historyId": "40d8112848816ac375b51adc10571fa8", "testCaseId": "40d8112848816ac375b51adc10571fa8", "fullName": "tests.test_cards#test_open_various_game_cards", "labels": [{"name": "story", "value": "Открытие первой, второй и последней карточки с главной страницы"}, {"name": "feature", "value": "Game Card"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cards"}, {"name": "host", "value": "DESKTOP-VNCOHUV"}, {"name": "thread", "value": "14544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cards"}]}