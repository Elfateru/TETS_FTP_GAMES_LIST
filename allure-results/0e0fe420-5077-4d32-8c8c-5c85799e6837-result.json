{"name": "test_sort_by", "status": "broken", "statusDetails": {"message": "AttributeError: 'Config' object has no attribute 'TestSortBy'", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"94e8b423d1c1b3a38377eef59dbd07dc\")>\ntest_config = Config(srv=Service(URL='https://makarovartem.github.io/frontend-avito-tech-test-assignment'), cards=TestCards(PARENT_S...ITEM='.ant-select-selection-item', SELECTION_DROPDOWN='.ant-select-dropdown', SELECTION_LIST='ul.ant-list-items > li'))\n\n    @allure.feature(\"Sort\")\n    @allure.story(\"Сортировка по выпадающему списку Sort by\")\n    def test_sort_by(driver: webdriver.Chrome, test_config: config.Config) -> None:\n        url = test_config.srv.URL\n>       selection_item = test_config.TestSortBy.SELECTION_ITEM\n                         ^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_sort_by.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Config(srv=Service(URL='https://makarovartem.github.io/frontend-avito-tech-test-assignment'), cards=TestCards(PARENT_S...ITEM='.ant-select-selection-item', SELECTION_DROPDOWN='.ant-select-dropdown', SELECTION_LIST='ul.ant-list-items > li'))\nitem = 'TestSortBy'\n\n    def __getattr__(self, item: str) -> Any:\n        private_attributes = object.__getattribute__(self, '__private_attributes__')\n        if item in private_attributes:\n            attribute = private_attributes[item]\n            if hasattr(attribute, '__get__'):\n                return attribute.__get__(self, type(self))  # type: ignore\n    \n            try:\n                # Note: self.__pydantic_private__ cannot be None if self.__private_attributes__ has items\n                return self.__pydantic_private__[item]  # type: ignore\n            except KeyError as exc:\n                raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n        else:\n            # `__pydantic_extra__` can fail to be set if the model is not yet fully initialized.\n            # See `BaseModel.__repr_args__` for more details\n            try:\n                pydantic_extra = object.__getattribute__(self, '__pydantic_extra__')\n            except AttributeError:\n                pydantic_extra = None\n    \n            if pydantic_extra:\n                try:\n                    return pydantic_extra[item]\n                except KeyError as exc:\n                    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\n            else:\n                if hasattr(self.__class__, item):\n                    return super().__getattribute__(item)  # Raises AttributeError if appropriate\n                else:\n                    # this is the current error\n>                   raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nE                   AttributeError: 'Config' object has no attribute 'TestSortBy'\n\n.venv\\Lib\\site-packages\\pydantic\\main.py:991: AttributeError"}, "attachments": [{"name": "screenshot_on_failure", "source": "669e30bb-78f7-4188-800e-2ab8337bbe8d-attachment.png", "type": "image/png"}], "start": 1750005226517, "stop": 1750005226517, "uuid": "fee523fe-471c-4bbf-9f0c-b85e21a7c019", "historyId": "f8e363753493efba6f66312c3a0cdcb8", "testCaseId": "f8e363753493efba6f66312c3a0cdcb8", "fullName": "tests.test_sort_by#test_sort_by", "labels": [{"name": "feature", "value": "Sort"}, {"name": "story", "value": "Сортировка по выпадающему списку Sort by"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_sort_by"}, {"name": "host", "value": "DESKTOP-VNCOHUV"}, {"name": "thread", "value": "11156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_sort_by"}]}